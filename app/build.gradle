plugins {
    id 'com.android.application'
}

def keyStoreFile = File.createTempFile("key", null)
keyStoreFile.deleteOnExit()

if (System.getenv("SIGNING_KEY") != null) {
    println 'key exist'
    keyStoreFile.bytes = Base64.decoder.decode(System.getenv("SIGNING_KEY"))
} else {
    println 'key NOT exist'
}

android {
    namespace 'm.co.rh.id.a_jarwis'
    compileSdk 33

    signingConfigs {
        release {
            storeFile keyStoreFile
            storePassword System.getenv("KEY_STORE_PASSWORD")
            keyAlias System.getenv("ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }
    defaultConfig {
        applicationId "m.co.rh.id.a_jarwis"
        minSdk 21
        targetSdk 33
        versionCode 8
        versionName "1.3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (System.getenv("SIGNING_KEY") != null) {
                signingConfig signingConfigs.release
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation project(":base")
    implementation project(":settings")
    implementation project(":ml-engine")

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

project.afterEvaluate {
    def versionCode = android.defaultConfig.versionCode
    File changeLogTxt = new File(project.rootDir, "fastlane/metadata/android/en-US/changelogs/" + versionCode + ".txt")
    if (changeLogTxt.exists()) {
        File outputChangeLog = new File(project.buildDir, "changelog.txt")
        if (!outputChangeLog.exists()) {
            outputChangeLog.parentFile.mkdirs()
            outputChangeLog.createNewFile()
        }
        outputChangeLog.bytes = changeLogTxt.bytes
    }
}
